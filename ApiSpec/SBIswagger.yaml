swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for the MOTI School Bus Application
  description: The School Bus application tracks that inspections are performed in a timely fashion. For each school bus the application tracks information about the bus (including data from ICBC, NSC, etc.), it's past and next inspection dates and results, contacts, and the inspector responsible for next inspecting the bus.
  termsOfService: N/A
basePath: /api
paths:
  /ccwdata:
    get:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWData"
    post:
      tags:
        - CCWData
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWData"
      responses:
        201:
          description: CCWData created
          headers:
            Location:
              description: A link to the CCWData
              type: string
              format: url
          schema:
            $ref: "#/definitions/CCWData"  
  /ccwdata/{id}:
    get:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWData"
        404:
          description: CCWData not found
      parameters:
        - name: id
          in: path
          description: id of CCWData to fetch
          required: true
          type: integer
    put:
      tags:
        - CCWData
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWData"
        404:
          description: CCWData not found
      parameters:
        - name: id
          in: path
          description: id of CCWData to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWData"
  /ccwdata/{id}/delete:
    post:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: CCWData not found
      parameters:
        - name: id
          in: path
          description: id of CCWData to delete
          required: true
          type: integer

  /ccwdata/bulk:
    post:
      tags:
        - CCWData
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWData"
      responses:
        201:
          description: CCWData created
  /inspections:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
    post:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection created
          headers:
            Location:
              description: A link to the Inspection
              type: string
              format: url
          schema:
            $ref: "#/definitions/Inspection"  
  /inspections/{id}:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Inspection"
        404:
          description: Inspection not found
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
    put:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Inspection"
        404:
          description: Inspection not found
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/{id}/delete:
    post:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Inspection not found
      parameters:
        - name: id
          in: path
          description: id of Inspection to delete
          required: true
          type: integer

  /inspections/bulk:
    post:
      tags:
        - Inspection
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection created
  /schoolbuses:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
    post:
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus created
          headers:
            Location:
              description: A link to the SchoolBus
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBus"  
  /schoolbuses/{id}:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
  /schoolbuses/{id}/delete:
    post:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to delete
          required: true
          type: integer

  /schoolbuses/bulk:
    post:
      tags:
        - SchoolBus
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus created
  /notes:
    get:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
    post:
      tags:
        - Note
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Note"
      responses:
        201:
          description: Note created
          headers:
            Location:
              description: A link to the Note
              type: string
              format: url
          schema:
            $ref: "#/definitions/Note"  
  /notes/{id}:
    get:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to fetch
          required: true
          type: integer
    put:
      tags:
        - Note
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Note"
  /notes/{id}/delete:
    post:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to delete
          required: true
          type: integer

  /notes/bulk:
    post:
      tags:
        - Note
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
      responses:
        201:
          description: Note created
  /attachments:
    get:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Attachment"
    post:
      tags:
        - Attachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Attachment"
      responses:
        201:
          description: Attachment created
          headers:
            Location:
              description: A link to the Attachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/Attachment"  
  /attachments/{id}:
    get:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Attachment"
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to fetch
          required: true
          type: integer
    put:
      tags:
        - Attachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Attachment"
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Attachment"
  /attachments/{id}/delete:
    post:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to delete
          required: true
          type: integer

  /attachments/bulk:
    post:
      tags:
        - Attachment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Attachment"
      responses:
        201:
          description: Attachment created
  /histories:
    get:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/History"
    post:
      tags:
        - History
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History"  
  /histories/{id}:
    get:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/History"
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to fetch
          required: true
          type: integer
    put:
      tags:
        - History
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/History"
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
  /histories/{id}/delete:
    post:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to delete
          required: true
          type: integer

  /histories/bulk:
    post:
      tags:
        - History
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/History"
      responses:
        201:
          description: History created
  /notifications:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
    post:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification created
          headers:
            Location:
              description: A link to the Notification
              type: string
              format: url
          schema:
            $ref: "#/definitions/Notification"  
  /notifications/{id}:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Notification"
        404:
          description: Notification not found
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
    put:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Notification"
        404:
          description: Notification not found
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
  /notifications/{id}/delete:
    post:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Notification not found
      parameters:
        - name: id
          in: path
          description: id of Notification to delete
          required: true
          type: integer

  /notifications/bulk:
    post:
      tags:
        - Notification
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification created
  /notificationevents:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
    post:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent created
          headers:
            Location:
              description: A link to the NotificationEvent
              type: string
              format: url
          schema:
            $ref: "#/definitions/NotificationEvent"  
  /notificationevents/{id}:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/NotificationEvent"
        404:
          description: NotificationEvent not found
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
    put:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/NotificationEvent"
        404:
          description: NotificationEvent not found
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
  /notificationevents/{id}/delete:
    post:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: NotificationEvent not found
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to delete
          required: true
          type: integer

  /notificationevents/bulk:
    post:
      tags:
        - NotificationEvent
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent created
  /schoolbusowners:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
    post:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner created
          headers:
            Location:
              description: A link to the SchoolBusOwner
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwner"  
  /schoolbusowners/{id}:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwner"
        404:
          description: SchoolBusOwner not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwner"
        404:
          description: SchoolBusOwner not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/{id}/delete:
    post:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwner not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to delete
          required: true
          type: integer

  /schoolbusowners/bulk:
    post:
      tags:
        - SchoolBusOwner
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner created
  /contacts:
    get:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    post:
      tags:
        - Contact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        201:
          description: Contact created
          headers:
            Location:
              description: A link to the Contact
              type: string
              format: url
          schema:
            $ref: "#/definitions/Contact"  
  /contacts/{id}:
    get:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to fetch
          required: true
          type: integer
    put:
      tags:
        - Contact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
  /contacts/{id}/delete:
    post:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to delete
          required: true
          type: integer

  /contacts/bulk:
    post:
      tags:
        - Contact
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
      responses:
        201:
          description: Contact created
  /groups:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
    post:
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
      responses:
        201:
          description: Group created
          headers:
            Location:
              description: A link to the Group
              type: string
              format: url
          schema:
            $ref: "#/definitions/Group"  
  /groups/{id}:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to fetch
          required: true
          type: integer
    put:
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
  /groups/{id}/delete:
    post:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to delete
          required: true
          type: integer

  /groups/bulk:
    post:
      tags:
        - Group
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
      responses:
        201:
          description: Group created
  /permissions:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    post:
      tags:
        - Permission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
      responses:
        201:
          description: Permission created
          headers:
            Location:
              description: A link to the Permission
              type: string
              format: url
          schema:
            $ref: "#/definitions/PermissionViewModel"  
  /permissions/{id}:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PermissionViewModel"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
    put:
      tags:
        - Permission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PermissionViewModel"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
  /permissions/{id}/delete:
    post:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to delete
          required: true
          type: integer

  /permissions/bulk:
    post:
      tags:
        - Permission
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission created
  /roles:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RoleViewModel"
    post:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
      responses:
        201:
          description: Role created
          headers:
            Location:
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/RoleViewModel"  
  /roles/{id}:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RoleViewModel"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
    put:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RoleViewModel"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
  /roles/{id}/delete:
    post:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to delete
          required: true
          type: integer

  /roles/bulk:
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
      responses:
        201:
          description: Role created

  /rolepermissions/bulk:
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: Role created

  /usergroups/bulk:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: User created

  /userroles/bulk:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
      responses:
        201:
          description: User created
  /regions:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
    post:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        201:
          description: Region created
          headers:
            Location:
              description: A link to the Region
              type: string
              format: url
          schema:
            $ref: "#/definitions/Region"  
  /regions/{id}:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to fetch
          required: true
          type: integer
    put:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
  /regions/{id}/delete:
    post:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to delete
          required: true
          type: integer

  /regions/bulk:
    post:
      tags:
        - Region
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      responses:
        201:
          description: Region created
  /districts:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
    post:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
      responses:
        201:
          description: District created
          headers:
            Location:
              description: A link to the District
              type: string
              format: url
          schema:
            $ref: "#/definitions/District"  
  /districts/{id}:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to fetch
          required: true
          type: integer
    put:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
  /districts/{id}/delete:
    post:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to delete
          required: true
          type: integer

  /districts/bulk:
    post:
      tags:
        - District
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
      responses:
        201:
          description: District created
  /ccwjurisdictions:
    get:
      tags:
        - CCWJurisdiction
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWJurisdiction"
    post:
      tags:
        - CCWJurisdiction
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWJurisdiction"
      responses:
        201:
          description: CCWJurisdiction created
          headers:
            Location:
              description: A link to the CCWJurisdiction
              type: string
              format: url
          schema:
            $ref: "#/definitions/CCWJurisdiction"  
  /ccwjurisdictions/{id}:
    get:
      tags:
        - CCWJurisdiction
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWJurisdiction"
        404:
          description: CCWJurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of CCWJurisdiction to fetch
          required: true
          type: integer
    put:
      tags:
        - CCWJurisdiction
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWJurisdiction"
        404:
          description: CCWJurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of CCWJurisdiction to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWJurisdiction"
  /ccwjurisdictions/{id}/delete:
    post:
      tags:
        - CCWJurisdiction
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: CCWJurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of CCWJurisdiction to delete
          required: true
          type: integer

  /ccwjurisdictions/bulk:
    post:
      tags:
        - CCWJurisdiction
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWJurisdiction"
      responses:
        201:
          description: CCWJurisdiction created
  /serviceareas:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
    post:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea created
          headers:
            Location:
              description: A link to the ServiceArea
              type: string
              format: url
          schema:
            $ref: "#/definitions/ServiceArea"  
  /serviceareas/{id}:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to fetch
          required: true
          type: integer
    put:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
  /serviceareas/{id}/delete:
    post:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to delete
          required: true
          type: integer

  /serviceareas/bulk:
    post:
      tags:
        - ServiceArea
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea created
  /cities:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
    post:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
      responses:
        201:
          description: City created
          headers:
            Location:
              description: A link to the City
              type: string
              format: url
          schema:
            $ref: "#/definitions/City"  
  /cities/{id}:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
    put:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
  /cities/{id}/delete:
    post:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to delete
          required: true
          type: integer

  /cities/bulk:
    post:
      tags:
        - City
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
      responses:
        201:
          description: City created
  /schooldistricts:
    get:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolDistrict"
    post:
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
      responses:
        201:
          description: SchoolDistrict created
          headers:
            Location:
              description: A link to the SchoolDistrict
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolDistrict"  
  /schooldistricts/{id}:
    get:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolDistrict"
        404:
          description: SchoolDistrict not found
      parameters:
        - name: id
          in: path
          description: id of SchoolDistrict to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolDistrict"
        404:
          description: SchoolDistrict not found
      parameters:
        - name: id
          in: path
          description: id of SchoolDistrict to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
  /schooldistricts/{id}/delete:
    post:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolDistrict not found
      parameters:
        - name: id
          in: path
          description: id of SchoolDistrict to delete
          required: true
          type: integer

  /schooldistricts/bulk:
    post:
      tags:
        - SchoolDistrict
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolDistrict"
      responses:
        201:
          description: SchoolDistrict created
  /attachments/{id}/download:
    get:
      summary: Returns the binary file component of an attachment
      tags:
        - Attachment
      consumes: []
      produces:      
        - application/octet-stream        
      parameters:                
        - name: id
          in: path
          description: Attachment Id
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Attachment not found in CCW system    
  /ccwdata/fetch:
    get:
      summary: fetches data from the ICBC CCW system, and constructs a CCWData object from that.  Note that it does not perform the insert of that data into the database, only provides JSON data suitable for insertion. If a CCWData record exists in the schoolbus database then the id field will match that record, however all other data will be from the ICBC CCW system.     
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:                
        - name: regi
          in: query
          description: Registration Number (also known as Serial)
          type: string
        - name: vin
          in: query
          description: Vehicle Identification Number
          type: string
        - name: plate
          in: query
          description: License Plate String
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWData"
        404:
          description: Vehicle not found in CCW system
  /groups/{id}/users:
    get:
      summary: returns users in a given Group
      description:
        Used to get users in a given Group
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Group to fetch Users for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"          
  /schoolbuses/search:
    get:
      summary: Searches school buses
      description:
        Used for the search schoolbus page.
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: districts
          in: query
          description: Districts (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer
        - name: inspectors
          in: query
          description: Assigned School Bus Inspectors (array of id numbers)
          type: array
          items:
              type: integer
        - name: cities
          in: query
          description: Cities (array of id numbers)
          type: array
          items:
              type: integer
        - name: schooldistricts
          in: query
          description: School Districts (array of id numbers)
          type: array
          items:
              type: integer
        - name: owner
          in: query
          type: integer
        - name: regi
          in: query
          description: e Regi Number
          type: string
        - name: vin
          in: query
          description: VIN
          type: string
        - name: plate
          in: query
          description: License Plate String
          type: string
        - name: includeInactive
          in: query
          description: True if Inactive schoolbuses will be returned
          type: boolean
        - name: onlyReInspections
          in: query
          description: If true, only buses that need a re-inspection will be returned
          type: boolean
        - name: startDate
          description: Inspection start date
          in: query
          type: string
          format: date-time
        - name: endDate
          description: Inspection end date
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
  /schoolbuses/{id}/inspections:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'
        "404":
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch Inspections for
          required: true
          type: integer
  /schoolbuses/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBus.
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch notes for
          required: true
          type: integer
  /schoolbuses/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachmentViewModel'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch attachments for
          required: true
          type: integer    
  /schoolbuses/{id}/history:
    get:
      description: Returns History for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200': OK
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History"        
  /schoolbuses/{id}/ccwdata:
    get:
      description: Returns CCWData for a particular Schoolbus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CCWData'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch CCWData for
          required: true
          type: integer
  /schoolbuses/{id}/newpermit:
    put:
      description:  Obtains a new permit number for the indicated Schoolbus.  Returns the updated SchoolBus record.
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SchoolBus'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to obtain a new permit number for
          required: true
          type: integer
  /schoolbuses/{id}/pdfpermit:
    get:
      description:  Returns a PDF version of the permit for the selected Schoolbus
      tags:
        - SchoolBus
      produces:
        - application/pdf
      responses:
        '200':
          description: OK
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to obtain the PDF permit for
          required: true
          type: integer                    
  /schoolbusowners/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Attachment'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch attachments for
          required: true
          type: integer
  /schoolbusowners/{id}/history:
    get:
      description: Returns History for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the SchoolBus Owner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200': OK
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to add History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History"          
  /schoolbusowners/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch notes for
          required: true
          type: integer
  /schoolbusowners/{id}/view:
    get:
      description: Returns SchoolBusOwner data plus additional information required for display
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerViewModel'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch attachments for
          required: true
          type: integer
  /schoolbusowners/search:
    get:
      summary: Searches school bus owners
      description:
        Used for the search school bus owners.
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: districts
          in: query
          description: Districts (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer
        - name: inspectors
          in: query
          description: Assigned School Bus Inspectors (array of id numbers)
          type: array
          items:
              type: integer
        - name: owner
          in: query
          type: integer
        - name: includeInactive
          in: query
          description: True if Inactive schoolbuses will be returned
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"  
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
    post:
      description: Adds a permissions to a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      description: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the users for a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users:
    get:
      description: Returns all users
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
        404:
           description: User not found
    post:
      description: Create new user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: User created
          headers:
            Location:
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/User"
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/current/favourites:
    put:
      description: Updates a favourite
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"            
    post:
      description: Create new favourite for the current user
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"
  /users/current/favourites/{type}:
    get:
      description: Returns a user's favourites of a given type.  If type is empty, returns all.
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
        "404":
           description: User not found
      parameters:
        - name: type
          in: path
          description: type of favourite to return
          required: true
          type: string
  /users/current/favourites/{id}/delete:
    post:
      description: Removes a specific user favourite
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
      parameters:
        - name: id
          in: path
          description: id of Favourite to delete
          required: true
          type: integer      
  /users/bulk:
    post:
      description: Adds a number of users
      tags:
        - User
      x-codegen-permission: ADMIN
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        200:
          description: OK
  /users/search:
    get:
      summary: Searches Users
      description:
        Used for the search users.
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: districts
          in: query
          description: Districts (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer       
        - name: surname
          in: query
          type: string
        - name: includeInactive
          in: query
          description: True if Inactive users will be returned
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"  
  /users/{id}:
    get:
      description: Returns data for a particular user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
           description: User not found
    put:
      description: Updates a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserViewModel"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
          description: User not found
  /users/{id}/delete:
    post:
      description: Deletes a user
      tags:
        - User
      x-codegen-permission: ADMIN
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: User not found
  /users/{id}/favourites:
    get:
      description: Returns the favourites for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
        404:
           description: User not found
    post:
      description: Adds favourites to a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
      responses:
        200:
          description: Favourites added to user          
    put:
      description: Updates the favourites for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
      responses:
        200:
          description: OK          
        404:
          description: User not found  
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the roles for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
    post:
      description: Add to the active set of groups for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembershipViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found  
  /users/{id}/notifications:
    get:
      description: Returns a user's notifications
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationViewModel"
      parameters:
        - name: id
          in: path
          description: id of User to fetch notifications for
          required: true
          type: integer
  
  /regions/{id}/districts:
    get:
      description: Returns the districts for a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Region for which to fetch the Districts
          required: true
          type: integer
  /districts/{id}/serviceareas:
    get:
      description: Returns the Service Areas for a specific region
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of District for which to fetch the ServiceAreas
          required: true
          type: integer
definitions:
  SchoolBus:
    type: object
    description: The School Bus vehicle information supplementary to the vehicle information in ICBC
    required:
      - id
      - status
      - permitClassCode
      - bodyTypeCode
      - schoolBusSeatingCapacity
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a SchoolBus
      ICBCRegistrationNumber:
        type: string
        maxLength: 40
        description: The registration number of the vehicle as entered by the user and confirmed by the CCW Web Services
      licencePlateNumber:
        type: string
        maxLength: 15
        description: The License Plate Number for the vehicle
      VehicleIdentificationNumber:
        type: string
        maxLength: 17
        uniqueItems: true
        description:  A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.
      schoolBusOwner:
        $ref: '#/definitions/SchoolBusOwner'
        description: A foreign key reference to the system-generated unique identifier for School Bus Owner
      permitNumber:
        format: int32
        type: integer
        uniqueItems: true
        description: The (generated) permit number for the School Bus. The number is set by the system when the inspector generates a permit based on a business rule permit number format.
      permitIssueDate:
        type: string
        format: date-time
        description: The date a permit number was established for this School Bus.
      status:
        type: string
        maxLength: 20
        description: Status of the school bus record - current values are Inactive, Active, Archived
      isOutOfProvince:
        type: boolean
        description: True if the School Bus is registered outside of BC.
      CCWJurisdiction:
        $ref: '#/definitions/CCWJurisdiction'
        description: The Jurisdication of an Out Of Province Bus. Needed for querying CCW.
      District:
        $ref: '#/definitions/District'
        description: A foreign key reference to the system-generated unique identifier for a 
      homeTerminalAddress1:
        type: string
        maxLength: 80
        description: Address Line 1 of physical location of the School Bus.
      homeTerminalAddress2:
        type: string
        maxLength: 80
        description: Address Line 2 of physical location of the School Bus.
      homeTerminalCity:
        $ref: '#/definitions/City'
        description: City of physical location of the School Bus.
      homeTerminalProvince:
        type: string
        maxLength: 40
        description: Province of physical location of the School Bus - free form.
      homeTerminalPostalCode:
        type: string
        maxLength: 15
        description: Postal Code of physical location of the School Bus.
      homeTerminalComment:
        type: string
        maxLength: 2048
        description: A comment about the physical location of the bus so that the Inspector can more easily find it for an inspection.
      restrictionsText:
        type: string
        maxLength: 2048
        description: Text of any restrictions to be printed on the school bus permit. Standard comments are associated with the Permit Class but the inspector can enter free form text.
      nextInspectionDate:
        type: string
        format: date-time
        description: The next inspection date for this School Bus which is set when inspection results are saved
      nextInspectionTypeCode:
        type: string
        maxLength: 30
        description:  Annual or Re-inspection based on the Pass&#x2F;Fail status of the most recent inspection - An enumerated type (by the UI) to indicate the type of the next inspection
      schoolDistrict:
        $ref: '#/definitions/SchoolDistrict'
        description: The School District in which the School Bus operates. The school bus may or may not be associated with the School District itself - we just track where it is regardless.
      isIndependentSchool:
        type: boolean
        description: True if the School Bus is associated with an Independent School. If true,  the name of the Independent School should be in the companion field.
      independentSchoolName:
        type: string
        maxLength: 120
        description: The name of the Independent School to which the School Bus is associated. Should be null if the companion isIndependentSchool is false.
      permitClassCode:
        type: string
        maxLength: 50
        description: The enumerated class of School Bus from drop down
      bodyTypeCode:
        type: string
        maxLength: 50
        description: The enumerated body type of the School Bus from drop down
      unitNumber:
        type: string
        maxLength: 30
        description: The unit number of the Bus as defined by the School Bus owner - freeform text.
      schoolBusSeatingCapacity:
        format: int32
        type: integer
        description: The maximum number of passengers in the bus based on the specific use of the bus including the driver. For example,  the same 2-per seat &#x2F; 24-passenger model might have a seating capacity of 36 if the specific bus is to be used for small children,  3 per seat.
      mobilityAidCapacity:
        format: int32
        type: integer
        description: The number of mobility aid passenger seats in the bus.
      inspector:
        $ref: '#/definitions/User'
        description: The inspector assigned to this schoolbus
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
        description: The set of notes about the school bus entered by users.
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
        description: The set of attachments about the school bus uploaded by the users.
      history:
        type: array
        items:
          $ref: '#/definitions/History'
        description: The history of updates made to the School Bus.
      CCWData:
        $ref: '#/definitions/CCWData'
        description: CCWData for this School Bus
  SchoolBusOwner:
    type: object
    description: Demographic information about companies, organizations, school districts, or individuals who own or lease school buses
    required:
      - id
      - name
      - status
      - dateCreated
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a SchoolBusOwner
      name:
        type: string
        maxLength: 150
        uniqueItems: true
        description: The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.
      status:
        type: string
        maxLength: 30
        description: Status of the School Bus owner - enumerated value Active,  Inactive or Archived from drop down
      dateCreated:
        type: string
        format: date-time
        description: The original create date and time of the owner record. The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.
      primaryContact:
        $ref: '#/definitions/Contact'
        description: Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
      District:
        $ref: '#/definitions/District'
        description: The District to which this School Bus is affliated.
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
        description: The set of contacts related to the School Bus Owner.
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
        description: The set of notes about the school bus owner entered by users.
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
        description: The set of attachments about the school bus owner uploaded by the users.
      history:
        type: array
        items:
          $ref: '#/definitions/History'
        description: The history of updates made to the School Bus Owner data.
  CCWData:
    type: object
    description: Data pulled in from external sources (ICBC, NSC, etc) about School Buses and retained but not updated in the School Bus app. All data elements are simply copied from the comparable fields in the WSDLs of the Web Service Calls. The true source of the field definitions are in those other systems.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for CCWData
      ICBCRegistrationNumber:
        type: string
        maxLength: 255
        uniqueItems: true
        description: The Registration Number (Regi) is the link between the CCW vehicle information and a specific School Bus
      ICBCModelYear:
        format: int32
        type: integer
        description: Vehicle Year
      ICBCVehicleType:
        type: string
        maxLength: 255
        description: ICBC defined field - designates Commercial, Private, Other Categories
      ICBCRateClass:
        type: string
        maxLength: 255
        description: Defines usage such as pleasure only, business, delivery, etc..
      ICBCCVIPDecal:
        type: string
        maxLength: 255
        description: Six monthly commercial vehicle inspection decal number
      ICBCFleetUnitNo:
        format: int32
        type: integer
        description: The owner-defined number of the bus within their bus fleet.
      ICBCGrossVehicleWeight:
        format: int32
        type: integer
        description: Vehicle gross weight in kgs
      ICBCMake:
        type: string
        maxLength: 255
        description: Vehicle make
      ICBCBody:
        type: string
        maxLength: 255
        description: Vehicle body code
      ICBCRebuiltStatus:
        type: string
        maxLength: 255
        description: ICBC coded field about whether or not the vehicle has been rebuilt and if so the nature of the rebuilding.
      ICBCCVIPExpiry:
        type: string
        format: date-time
        description: Expiry date of the last 6 month commercial vehicle inspection. 
      ICBCNetWt:
        format: int32
        type: integer
        description: Vehicle net weight in kgs
      ICBCModel:
        type: string
        maxLength: 255
        description: Vehicle model codes used by ICBC - for example bus, scbus, dump, logtr
      ICBCFuel:
        type: string
        maxLength: 255
        description: Fuel type gasoline, propane, diesel etc..
      ICBCSeatingCapacity:
        format: int32
        type: integer
        description: Vehicle seating capacity including driver
      ICBCColour:
        type: string
        maxLength: 255
        description: Vehicle color ex BLU, WHI, etc..
      ICBCNotesAndOrders:
        type: string
        maxLength: 255
        description: Notes and orders from ICBC about the vehicle.
      ICBCOrderedOn:
        type: string
        format: date-time
        description: TO BE DETERMINED
      ICBCRegOwnerName:
        type: string
        maxLength: 255
        description: The name of the registered owner of the vehicle - per ICBC.
      ICBCRegOwnerAddr1:
        type: string
        maxLength: 255
        description: Owners address line 1
      ICBCRegOwnerAddr2:
        type: string
        maxLength: 255
        description: Owners address line 2
      ICBCRegOwnerCity:
        type: string
        maxLength: 255
        description: Owners address city
      ICBCRegOwnerProv:
        type: string
        maxLength: 255
        description: Owners address Province 
      ICBCRegOwnerPostalCode:
        type: string
        maxLength: 255
        description: Owners address Postal Code
      ICBCRegOwnerStatus:
        type: string
        maxLength: 255
        description: The status (as defined by ICBC) of the registered owner of the vehicle.
      ICBCRegOwnerRODL:
        type: string
        maxLength: 255
        description: Registered Owners Driver Licence number
      ICBCRegOwnerPODL:
        type: string
        maxLength: 255
        description: Previous Owners Driver Licence number
      ICBCLicencePlateNumber:
        type: string
        maxLength: 255
        description: The License Plate Number for the vehicle
      ICBCVehicleIdentificationNumber:
        type: string
        maxLength: 255
        description:  A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.
      NSCClientNum:
        type: string
        maxLength: 255
        description: National Safety Code Carrier Number on ICBC client system
      NSCCarrierName:
        type: string
        maxLength: 255
        description: National Safety Code Carrier Name on ICBC client system
      NSCCarrierConditions:
        type: string
        maxLength: 255
        description: Conditions imposed on the carrier (bus owner) within NSC
      NSCCarrierSafetyRating:
        type: string
        maxLength: 255
        description: Carrier safety rating ex - satisfatory, SAT-unaudited etc..
      NSCPolicyNumber:
        type: string
        maxLength: 255
        description: From NSC - The number of the carrier (NSC Clients) necessary insurance required to operate the vehicle.
      NSCPolicyEffectiveDate:
        type: string
        format: date-time
        description: From NSC - The effective data of the policy.
      NSCPolicyStatusDate:
        type: string
        format: date-time
        description: From NSC - The date the status of the policy was established.
      NSCPolicyExpiryDate:
        type: string
        format: date-time
        description: From NSC - The data of expiration of the policy.
      NSCPolicyStatus:
        type: string
        maxLength: 255
        description: From NSC - The latest status of the policy.
      NSCPlateDecal:
        type: string
        maxLength: 255
        description: From NSC - The plate decal as defined by NSC on the vehicle
      dateFetched:
        type: string
        format: date-time
        description: The datetime of when the record was most recently fetched from the upstream CCW service
  Inspection:
    type: object
    description: School Bus inspection details supplementary to the RIP inspection
    required:
      - id
      - inspectionDate
      - inspectionTypeCode
      - inspectionResultCode
      - createdDate
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for an Inspection
      schoolBus:
        $ref: '#/definitions/SchoolBus'
        description: A foreign key reference to the system-generated unique identifier for a School Bus
      inspector:
        $ref: '#/definitions/User'
        description: Defaults for a new inspection to the current user,  but can be changed as needed.
      inspectionDate:
        type: string
        format: date-time
        description: The date and time the inspection was conducted.
      inspectionTypeCode:
        type: string
        maxLength: 255
        description: The type of the inspection - enumerated type of Annual or Re-inspection,  pulled from the School Bus record at the time the inspection record is created
      inspectionResultCode:
        type: string
        maxLength: 255
        description: The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here.
      notes:
        type: string
        maxLength: 2048
        description: A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application.
      RIPInspectionId:
        type: string
        maxLength: 255
        description: The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details.
      createdDate:
        type: string
        format: date-time
        description: Record creation date and time
      previousNextInspectionDate:
        type: string
        format: date-time
        description: The next inspection date for the related School Bus prior to the creation of this record
      previousNextInspectionTypeCode:
        type: string
        maxLength: 30
        description: The next inspection type code for the related School Bus prior to the creation of this record
  Note:
    type: object
    description: Notes entered by users about instance of entities - e.g. School Buses and School Bus Owners
    required:
      - id
      - noteText
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a Note
      noteText:
        type: string
        maxLength: 2048
        description: The contents of the note.
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to other users as no longer applicable.
  Attachment:
    type: object
    description: Attachments uploaded by users about instance of entities - e.g. School Buses and School Bus Owners
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for an Attachment
      fileName:
        type: string
        maxLength: 2048
        description: Filename as passed by the user uploading the file
      fileContents:
        type: string
        format: binary
        description: Binary contents of the file
      description:
        type: string
        maxLength: 2048
        description: A note about the attachment,  optionally maintained by the user.
      type:
        type: string
        maxLength: 255
        description: Type of attachment
  History:
    type: object
    description: The history of updates made to an entity - e.g. a School Bus or a School Bus Owner
    required:
      - id
      - historyText
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a History
      historyText:
        type: string
        maxLength: 2048
        description: The text of the history entry tracked against the related entity.
  Contact:
    type: object
    description: A table of contacts related to various entities in the system. FK fields are used to link contacts to records in the system.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a Contact
      givenName:
        type: string
        maxLength: 50
        description: The given name of the contact.
      surname:
        type: string
        maxLength: 50
        description: The surname of the contact.
      organizationName:
        type: string
        maxLength: 150
        description: The organization name of the contact.
      role:
        type: string
        maxLength: 100
        description: The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list - for initial implementation, the field is freeform.
      notes:
        type: string
        maxLength: 150
        description: A note about the contact maintained by the users.
      emailAddress:
        type: string
        maxLength: 255
        description: The email address for the contact.
      workPhoneNumber:
        type: string
        maxLength: 20
        description: The work phone number for the contact.
      mobilePhoneNumber:
        type: string
        maxLength: 20
        description: The mobile phone number for the contact.
      faxPhoneNumber:
        type: string
        maxLength: 20
        description: The fax phone number for the contact.
      address1:
        type: string
        maxLength: 80
        description: Address 1 line of the address.
      address2:
        type: string
        maxLength: 80
        description: Address 2 line of the address.
      city:
        type: string
        maxLength: 100
        description: The City of the address.
      province:
        type: string
        maxLength: 50
        description: The Province of the address.
      postalCode:
        type: string
        maxLength: 15
        description: The postal code of the address.
  UserFavourite:
    type: object
    description: User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a UserFavourite
      type:
        type: string
        maxLength: 255
        description: The type of Favourite
      name:
        type: string
        maxLength: 255
        description: The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.
      value:
        type: string
        maxLength: 2048
        description: The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.
      isDefault:
        type: boolean
        description: True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.
      User:
        $ref: '#/definitions/User'
        description: The User who has this Favourite
  Region:
    type: object
    description: The MOTI-defined Regions - must match the official MOTI List
    required:
      - id
      - ministryRegionID
      - name
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a Region
      ministryRegionID:
        format: int32
        type: integer
        uniqueItems: true
        description: The Ministry ID for the Region
      name:
        type: string
        maxLength: 255
        description: The name of the Region
      startDate:
        type: string
        format: date-time
        description: The effective date of the Region record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Region record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  District:
    type: object
    description: The MOTI-defined Districts - must match the official MOTI List
    required:
      - id
      - ministryDistrictID
      - name
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a District
      ministryDistrictID:
        format: int32
        type: integer
        description: The Ministry ID for the District
      name:
        type: string
        maxLength: 255
        description: The name of the District
      region:
        $ref: '#/definitions/Region'
        description: The region in which the District is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the District record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the District record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  ServiceArea:
    type: object
    description: The MOTI-defined Service Areas - must match the official MOTI List
    required:
      - id
      - ministryServiceAreaID
      - name
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a ServiceArea
      ministryServiceAreaID:
        format: int32
        type: integer
        description: The Ministry ID for the Service Area
      name:
        type: string
        maxLength: 255
        description: The name of the Service Area
      district:
        $ref: '#/definitions/District'
        description: The district in which the Service Area is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the Service Area record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Service Area record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  SchoolDistrict:
    type: object
    description: A list of School Districts in the Province of BC. Authoritative source to be determined.
    required:
      - id
      - name
      - shortName
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a SchoolDistrict
      name:
        type: string
        maxLength: 255
        uniqueItems: true
        description: The full name of the School District
      shortName:
        type: string
        maxLength: 255
        description: A short name for the School District useful in some areas of the UI. Usually with format \&amp;quot;SD 61\&amp;quot;.
  City:
    type: object
    description: A list of cities in BC. Authoritative source to be determined.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a City
      name:
        type: string
        maxLength: 255
        description: The name of the City
      province:
        type: string
        maxLength: 255
        description: The name of the province of the city
  CCWJurisdiction:
    type: object
    description: The contents of the Jurisdiction table from CCW so that the user can select a Jurisdiction for passing to CCW on certain Out of Province School Bus Web Service calls
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a CCWJurisdiction
      jurisdictionId:
        format: int32
        type: integer
        description: The CCW system-generated unique identifier for a CCWJurisdiction. Needed for updating the table from CCW if necessary.
      effectiveDate:
        type: string
        format: date-time
        description: The effective date of the CCWJurisdiction record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      expiryDate:
        type: string
        format: date-time
        description: The end date of the CCWJurisdiction record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      activeFlag:
        type: boolean
        description: Flag from CCW indicating if the record is still active - Y indicating it is active. NOT CURRENTLY ENFORCED IN SCHOOL BUS
      code:
        type: string
        maxLength: 10
        description: A short version of the Jurisdiction - the familiar two-letter province or state code
      description:
        type: string
        maxLength: 50
        description: The full version of the Jurisdiction name.
  Notification:
    type: object
    description: Users associated with specific notifications, created at the time the notification record is created because of the user&#39;s business relationship to the bus - e.g. the user is the currently assigned inspector, or the user is the manager for the District in which the bus is located. The rules for linking a user to a notification for a specific bus could vary over time based on the needs of the business. At minimum, it is expected the current inspector assigned to a bus will be notified of every notification for that bus.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a Notification
      event:
        $ref: '#/definitions/NotificationEvent'
        description: A foreign key reference to the system-generated unique identifier for a Notification Event
      event2:
        $ref: '#/definitions/NotificationEvent'
        description: A foreign key reference to the system-generated unique identifier for a Notification Event
      hasBeenViewed:
        type: boolean
        description: True if the user linked to the inspection has read the notification
      isWatchNotification:
        type: boolean
        description: TO BE REMOVED
      isExpired:
        type: boolean
        description: TO BE REMOVED
      isAllDay:
        type: boolean
        description: TO BE REMOVED
      priorityCode:
        type: string
        maxLength: 255
        description: TO BE REMOVED
      user:
        $ref: '#/definitions/User'
        description: A foreign key reference to the system-generated unique identifier for a User
  NotificationEvent:
    type: object
    description: Notifications associated about changes (mostly from CCW data) to information related to a specific school bus - e.g. change of owner at ICBC, change in NSC client rating, etc.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a NotificationEvent
      eventTime:
        type: string
        format: date-time
        description: The date&#x2F;time of the creation of the event that triggered the creation of the notification.
      eventTypeCode:
        type: string
        maxLength: 255
        description: A categorization of the event for which the notification was created. The categories will be defined over time in code based on the requirements of the business. An example might be &quot;ICBCOwnerNameChange&quot; for when a change in the CCWData ICBC Owner Name field is changed.
      eventSubTypeCode:
        type: string
        maxLength: 255
        description: A further categorization of the event for which the notification was created.
      notes:
        type: string
        maxLength: 2048
        description: An assembled text string about the event that triggered the notification. Includes both static text and data about the notification. User Interface code will be used (based on the eventTypeCode - category) to assemble a dynamic string of information about the event - potentially including links to other relevant data - such as link to the School Bus detail screen.
      notificationGenerated:
        type: boolean
        description: TO BE REMOVED
      schoolBus:
        $ref: '#/definitions/SchoolBus'
        description: A foreign key reference to the system-generated unique identifier for a School Bus
  User:
    type: object
    description: Information about the users of the system.
    required:
      - id
      - givenName
      - surname
      - active
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a User
      givenName:
        type: string
        maxLength: 255
        description: Given name of the user.
      surname:
        type: string
        maxLength: 50
        description: Surname of the user.
      initials:
        type: string
        maxLength: 10
        description: Initials of the user, to be presented where screen space is at a premium.
      email:
        type: string
        maxLength: 255
        description: The email address of the user in the system.
      active:
        type: boolean
        description: A flag indicating the User is active in the system. Set false to remove access to the system for the user.
      smUserId:
        type: string
        maxLength: 255
        description: Security Manager User ID
      guid:
        type: string
        maxLength: 255
        description: The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.
      smAuthorizationDirectory:
        type: string
        maxLength: 255
        description: The user directory service used by Siteminder to authenticate the user - usually IDIR or BCeID.
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      district:
        $ref: '#/definitions/District'
        description: The District that the User belongs to
  UserRole:
    type: object
    description: A join table that provides allows each user to have any number of Roles in the system.  At login time the user is given the sum of the permissions of the roles assigned to that user. 
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a UserRole
      effectiveDate:
        type: string
        format: date-time
        description: The date on which the user was given the related role.
      expiryDate:
        type: string
        format: date-time
        description: The date on which a role previously assigned to a user was removed from that user.
      role:
        $ref: '#/definitions/Role'
        description: A foreign key reference to the system-generated unique identifier for a Role
  Role:
    type: object
    description: A table managed in the application by authorized users to create named Roles that can be assigned to Users as needed. Roles can be created as needed to support the users of the system and the roles they perform within the organization.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role
      name:
        type: string
        maxLength: 255
        description: The name of the Role, as established by the user creating the role.
      description:
        type: string
        maxLength: 255
        description: A description of the role as set by the user creating&#x2F;updating the role.
      rolePermissions:
        type: array
        items:
          $ref: '#/definitions/RolePermission'
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
  RolePermission:
    type: object
    description: The collection of permissions included in a role.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RolePermission
      role:
        $ref: '#/definitions/Role'
        description: A foreign key reference to the system-generated unique identifier for a Role
      permission:
        $ref: '#/definitions/Permission'
        description: A foreign key reference to the system-generated unique identifier for a Permission
  Permission:
    type: object
    description: The set of permissions defined in the application. Each permission is given a name and triggers some behavior defined in the application. For example, a permission might allow users to see data or to have access to functionality restricted to users without that permission. Permissions are created as needed to the application and are added to the permissions table by data migrations executed at the time the software that uses the permission is deployed.
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Permission
      code:
        type: string
        maxLength: 255
        description: The name of the permission referenced in the software of the application.
      name:
        type: string
        maxLength: 255
        description: The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.
      description:
        type: string
        maxLength: 255
        description: A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.
  GroupMembership:
    type: object
    description: The users associated with a given group that has been defined in the application.
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a GroupMembership
      active:
        type: boolean
        description: A flag indicating the User is active in the group. Set false to remove the user from the designated group.
      group:
        $ref: '#/definitions/Group'
        description: A foreign key reference to the system-generated unique identifier for a Group
      user:
        $ref: '#/definitions/User'
        description: A foreign key reference to the system-generated unique identifier for a User
  Group:
    type: object
    description: A named entity that is used to created a collection of users into a group. For example, the School Bus Inspectors are in the group Inspectors. Groups, like permissions are defined by the application and referenced in the code of the application.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Group
      name:
        type: string
        maxLength: 255
        description: The name of the group, as refenced in the code.
      description:
        type: string
        maxLength: 255
        description: A description of the group that is presented to the user when they are setting a user into a group.
  HistoryViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id      
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a History
      historyText:
        type: string
        maxLength: 2048
        description: The text of the history entry tracked against the related entity.
      lastUpdateUserid:
        type: string
        description: Audit information - SM User Id for the User who most recently updated the record.
      lastUpdateTimestamp:
        type: string
        format: date-time
        description: Audit information - Timestamp for record modification       
      affectedEntityId:
        format: int32
        type: integer
        description: The primary key of the affected record        
  AttachmentViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id      
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      fileName:
        type: string
        maxLength: 2048
        description: Filename as passed by the user uploading the file    
      description:
        type: string
        maxLength: 2048
        description: A note about the attachment,  optionally maintained by the user.
      type:
        type: string
        maxLength: 255
        description: Type of attachment
  PermitViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      permitNumber:
        format: int32
        type: integer        
      permitIssueDate:
        type: string
      schoolBusOwnerName:
        type: string
      schoolBusOwnerAddressLine1:
        type: string
      schoolBusOwnerAddressLine2:
        type: string
      schoolBusMobilityAidCapacity:
        type: string
      schoolBusOwnerCity:
        type: string
      schoolBusOwnerProvince:
        type: string
      schoolBusOwnerPostalCode:
        type: string        
      icbcRegistrationNumber: 
        type: string
      vehicleIdentificationNumber:
        type: string
      icbcModelYear:
        format: int32
        type: integer
      icbcMake:
        type: string
      restrictionsText:
        type: string
      schoolDistrictshortName:
        type: string
      schoolBusSeatingCapacity:
        format: int32
        type: integer
      unitNumber:
        type: string
        maxLength: 30
        description: The unit number of the Bus as defined by the School Bus owner - freeform text.     
      permitClassCode:
        type: string
        maxLength: 50
        description: The enumerated class of School Bus from drop down
      bodyTypeCode:
        type: string
        maxLength: 50
        description: The enumerated body type of the School Bus from drop down       
  SchoolBusOwnerViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id      
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.
      status:
        type: string
        description: Status of the School Bus owner - enumerated value Active,  Archived
      dateCreated:
        type: string
        format: date-time
        description: The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.
      primaryContact:
        $ref: '#/definitions/Contact'
        description: Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
      District:
        $ref: '#/definitions/District'
        description: The District to which this School Bus is affliated.
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
        description: The set of contacts related to the School Bus Owner.
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
        description: The set of notes about the school bus owner entered by users.
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
        description: The set of attachments about the school bus owner uploaded by the users.
      history:
        type: array
        items:
          $ref: '#/definitions/History'
        description: The history of updates made to the School Bus Owner data.
      nextInspectionDate:
        type: string
        format: date-time
        description: The next inspection date associated with this owner
      numberOfBuses:
        format: int32
        type: integer
        description: The number of buses for which this owner is associated with       
      nextInspectionTypeCode:
        type: string
        description: Type Code for the Next InspectionType.  Null if there are no next inspections.
  UserViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name      
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      smUserId:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      district:
        $ref: '#/definitions/District'
        description: The District to which this User is affliated.
  CurrentUserViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name      
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      smUserId:
        type: string
      smAuthorizationDirectory:
        type: string
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      district:
        $ref: '#/definitions/District'
        description: The District to which this User is affliated.
      overdueInspections:
        format: int32
        type: integer
      scheduledInspections:
        format: int32
        type: integer
      dueNextMonthInspections:
        format: int32
        type: integer
      reInspections:
        format: int32
        type: integer
  UserDetailsViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionViewModel'
  UserRoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - effectiveDate
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  RoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  RolePermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      permissionId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  PermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembershipViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - active
      - userId
      - groupId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      groupId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  GroupViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  UserFavouriteViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  Context Name
        x-chance-type: name
      value:
        type: string
        description:  Saved search
        x-chance-type: word
      isDefault:
        type: boolean
      type:
        type: string
        description:  Type of favourite        
  NotificationViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      eventId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      event2Id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      hasBeenViewed:
        type: boolean
      isWatchNotification:
        type: boolean
      isExpired:
        type: boolean
      isAllDay:
        type: boolean
      priorityCode:
        type: string
      userId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000

securityDefinitions: {}
